{"version":3,"sources":["webpack:///../docz/Box/Box.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","space","backgroundColor","width","parentName","__position","__code","__scope","Playground","Row","Box","Inline","itemSpace","rounded","isMDXComponent"],"mappings":"0gBAQO,IAAMA,EAAe,Q,kMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,OADR,OAGA,8CACA,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAKC,MAAM,SAASC,gBAAgB,YAAYF,QAAQ,OAAxD,eAGA,iBAAQ,CACN,GAAM,cADR,cAGA,iBAAQ,CACN,GAAM,wBADR,2BAGA,4NACA,YAAC,IAAD,CAAKE,gBAAgB,YAAYD,MAAM,SAASD,QAAQ,OACxD,YAAC,IAAD,CAAKA,QAAQ,OACT,YAAC,IAAD,CAAKE,gBAAgB,gBAAgBC,MAAM,MAAMF,MAAM,QAAQD,QAAQ,OAAvE,WAGA,YAAC,IAAD,CAAKE,gBAAgB,gBAAgBC,MAAM,MAAMF,MAAM,QAAQD,QAAQ,OAAvE,aAGA,YAAC,IAAD,CAAKE,gBAAgB,OAAOC,MAAM,QAAQF,MAAM,QAAQD,QAAQ,OAAhE,eAKJ,uBAAK,sBAAMI,WAAW,OAAU,CAC5B,UAAa,iBADZ,6ZAgBL,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,kQAA+QC,QAAS,CACzTR,QACAH,kBACAY,eACAC,QACAC,QACAC,YACCX,QAAQ,cACX,YAAC,IAAD,CAAKY,UAAU,SAASZ,QAAQ,OAC5B,YAAC,IAAD,CAAKE,gBAAgB,gBAAgBD,MAAM,QAAQE,MAAM,MAAMH,QAAQ,OAAvE,SAGA,YAAC,IAAD,CAAKE,gBAAgB,gBAAgBD,MAAM,QAAQY,SAAO,EAACV,MAAO,CAAC,MAAO,OAAQH,QAAQ,OAA1F,Y,yLASRH,EAAWiB,gBAAiB","file":"component---docz-box-box-mdx-001c7f9cf9a865eb314f.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"D:/Web/react-nails/react-nails-docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { Row, Box, Inline } from \"react-nails\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"box\"\n    }}>{`Box`}</h1>\n    <p>{`A Box is simple box. `}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Box space=\"medium\" backgroundColor=\"infoLight\" mdxType=\"Box\">\n    Box content\n    </Box>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <h3 {...{\n      \"id\": \"width---ratio--ratio\"\n    }}>{`width - ratio | ratio[]`}</h3>\n    <p>{`Width defines the width of box, which it tries to consume of the parent element. 'px'/'em'-values and also ratio values like \"1/2\", \"3/4\" are allowed. The value can set as a responsive array.`}</p>\n    <Box backgroundColor=\"infoLight\" space=\"medium\" mdxType=\"Box\">\n    <Row mdxType=\"Row\">\n        <Box backgroundColor=\"positiveLight\" width=\"1/2\" space=\"small\" mdxType=\"Box\">\n            50% box\n        </Box>\n        <Box backgroundColor=\"negativeLight\" width=\"1/8\" space=\"small\" mdxType=\"Box\">\n            12.5% box\n        </Box>\n        <Box backgroundColor=\"info\" width=\"150px\" space=\"small\" mdxType=\"Box\">\n            150px box\n        </Box>\n    </Row>\n    </Box>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Box backgroundColor=\"infoLight\" space=\"medium\">\n    <Row>\n        <Box backgroundColor=\"positiveLight\" width=\"1/2\" space=\"small\">\n            50% box\n        </Box>\n        <Box backgroundColor=\"negativeLight\" width=\"1/8\" space=\"small\">\n            12.5% box\n        </Box>\n        <Box backgroundColor=\"info\" width=\"150px\" space=\"small\">\n            150px box\n        </Box>\n    </Row>\n</Box>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"playground\"\n    }}>{`Playground`}</h2>\n    <Playground __position={2} __code={'<Row itemSpace=\\\"medium\\\">\\n  <Box backgroundColor=\\\"positiveLight\\\" space=\\\"small\\\" width=\\\"1/2\\\">\\n    Box 1\\n  </Box>\\n  <Box\\n    backgroundColor=\\\"negativeLight\\\"\\n    space=\\\"small\\\"\\n    rounded\\n    width={[\\'1/2\\', \\'1/4\\']}\\n  >\\n    Box 2\\n  </Box>\\n</Row>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Row,\n      Box,\n      Inline\n    }} mdxType=\"Playground\">\n    <Row itemSpace=\"medium\" mdxType=\"Row\">\n        <Box backgroundColor=\"positiveLight\" space=\"small\" width=\"1/2\" mdxType=\"Box\">\n            Box 1\n        </Box>\n        <Box backgroundColor=\"negativeLight\" space=\"small\" rounded width={[\"1/2\", \"1/4\"]} mdxType=\"Box\">\n            Box 2\n        </Box>\n    </Row>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}