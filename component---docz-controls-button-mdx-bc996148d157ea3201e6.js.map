{"version":3,"sources":["webpack:///../docz/Controls/Button.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Text","Box","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","itemSpace","primary","icon","iconLeft","disabled","secondary","onClick","alert","parentName","as","CustomButton","__position","__code","__scope","Playground","Button","Inline","isMDXComponent"],"mappings":"shBASO,IAAMA,EAAe,Q,0MAE5B,IAAMC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAOL,EAAc,QACrBM,EAAMN,EAAc,OACpBO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,E,oIACF,mBACD,OAAO,YAACM,EAAD,KAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAI5E,iBAAQ,CACN,GAAM,UADR,UAGA,uEACA,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAQC,UAAU,SAASD,QAAQ,UACnC,YAAC,IAAD,CAAQE,SAAO,EAACC,KAAK,QAAQC,SAAS,aAAaJ,QAAQ,UACvD,YAACP,EAAD,CAAMO,QAAQ,QAAd,YAEJ,YAAC,IAAD,CAAQE,SAAO,EAACG,UAAQ,EAACL,QAAQ,UAAjC,YACA,YAAC,IAAD,CAAQM,WAAS,EAACN,QAAQ,UAA1B,aACA,YAAC,IAAD,CAAQM,WAAS,EAACD,UAAQ,EAACL,QAAQ,UAAnC,sBACA,YAAC,IAAD,CAAQO,QAAS,WACbC,MAAM,mBACLR,QAAQ,UAFb,aAIA,iBAAQ,CACN,GAAM,cADR,cAGA,iBAAQ,CACN,GAAM,qBADR,qBAGA,gEACA,YAAC,IAAD,CAAQE,SAAO,EAACF,QAAQ,UAAxB,WACA,iBAAQ,CACN,GAAM,uBADR,uBAGA,kEACA,YAAC,IAAD,CAAQM,WAAS,EAACN,QAAQ,UAA1B,aACA,iBAAQ,CACN,GAAM,sBADR,sBAGA,6CACA,YAAC,IAAD,CAAQE,SAAO,EAACG,UAAQ,EAACL,QAAQ,UAAjC,YACA,iBAAQ,CACN,GAAM,iBADR,iBAGA,kGACA,YAAC,IAAD,CAAQM,WAAS,EAACH,KAAK,QAAQH,QAAQ,UAAvC,eACA,iBAAQ,CACN,GAAM,qBADR,qBAGA,iGACA,YAAC,IAAD,CAAQM,WAAS,EAACF,SAAS,QAAQJ,QAAQ,UAA3C,oBACA,iBAAQ,CACN,GAAM,kBADR,kBAGA,sGAAqF,0BAAYS,WAAW,KAAvB,gBACrF,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,mGAML,YAACf,EAAD,CAAKM,QAAQ,OACb,YAAC,IAAD,CAAQU,GAAIC,IAAcX,QAAQ,UAAlC,iBAEA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAYY,WAAY,EAAGC,OAAQ,oHAAuHC,QAAS,CACjKxB,QACAO,kBACAkB,eACAC,WACAC,WACAN,kBACCX,QAAQ,cACX,YAAC,IAAD,CAAQC,UAAU,SAASD,QAAQ,UAC/B,YAAC,IAAD,CAAQE,SAAO,EAACF,QAAQ,UAAxB,UACA,YAAC,IAAD,CAAQM,WAAS,EAACN,QAAQ,UAA1B,gB,iMAORF,EAAWoB,gBAAiB","file":"component---docz-controls-button-mdx-bc996148d157ea3201e6.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"D:/Web/react-nails/react-nails-docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { Button, Inline } from 'react-nails';\nimport CustomButton from './CustomButton';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Text = makeShortcode(\"Text\");\nconst Box = makeShortcode(\"Box\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <p>{`Creates a primary, secondary or normal button.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Inline itemSpace=\"medium\" mdxType=\"Inline\">\n    <Button primary icon=\"times\" iconLeft=\"bookmark-r\" mdxType=\"Button\">\n        <Text mdxType=\"Text\">Primary</Text>\n    </Button>\n    <Button primary disabled mdxType=\"Button\">Disabled</Button>\n    <Button secondary mdxType=\"Button\">Secondary</Button>\n    <Button secondary disabled mdxType=\"Button\">Secondary disabled</Button>\n    <Button onClick={() => {\n        alert(\"You clicked me\");\n      }} mdxType=\"Button\">Click me</Button>\n    </Inline>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <h3 {...{\n      \"id\": \"primary---boolean\"\n    }}>{`primary - boolean`}</h3>\n    <p>{`Button will be styled as primary button`}</p>\n    <Button primary mdxType=\"Button\">Primary</Button>\n    <h3 {...{\n      \"id\": \"secondary---boolean\"\n    }}>{`secondary - boolean`}</h3>\n    <p>{`Button will be styled as secondary button`}</p>\n    <Button secondary mdxType=\"Button\">Secondary</Button>\n    <h3 {...{\n      \"id\": \"disabled---boolean\"\n    }}>{`disabled - boolean`}</h3>\n    <p>{`Disables the button.`}</p>\n    <Button primary disabled mdxType=\"Button\">Disabled</Button>\n    <h3 {...{\n      \"id\": \"icon---string\"\n    }}>{`icon - string`}</h3>\n    <p>{`Adds an icon next to the button content. Any registered icon can be used.`}</p>\n    <Button secondary icon=\"times\" mdxType=\"Button\">Icon Button</Button>\n    <h3 {...{\n      \"id\": \"iconleft---string\"\n    }}>{`iconLeft - string`}</h3>\n    <p>{`Adds an icon before the button content. Any registered icon can be used.`}</p>\n    <Button secondary iconLeft=\"times\" mdxType=\"Button\">Left Icon Button</Button>\n    <h3 {...{\n      \"id\": \"as---component\"\n    }}>{`as - Component`}</h3>\n    <p>{`The button will be rendered with the provided component. Default component is `}<inlineCode parentName=\"p\">{`NailsButton`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import CustomButton from './CustomButton'\n\n<Button as={CustomButton}>CustomButton</Button>\n`}</code></pre>\n    <Box mdxType=\"Box\">\n    <Button as={CustomButton} mdxType=\"Button\">CustomButton</Button>\n    </Box>\n    <h2 {...{\n      \"id\": \"playground\"\n    }}>{`Playground`}</h2>\n    <Playground __position={7} __code={'<Inline itemSpace=\\\"medium\\\">\\n  <Button primary>Pimary</Button>\\n  <Button secondary>Secondary</Button>\\n</Inline>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Button,\n      Inline,\n      CustomButton\n    }} mdxType=\"Playground\">\n    <Inline itemSpace=\"medium\" mdxType=\"Inline\">\n        <Button primary mdxType=\"Button\">Pimary</Button>\n        <Button secondary mdxType=\"Button\">Secondary</Button>\n    </Inline>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}