{"version":3,"sources":["webpack:///../docz/Controls/Input.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","suffix","prefix","value","onChange","__position","__code","__scope","Playground","Row","Input","Icon","Filler","Inline","QuantityInput","icon","textAlign","fluid","status","changeAmount","isMDXComponent"],"mappings":"0gBAQA,IAGaA,EAAe,Q,yMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,SADR,SAGA,iDACA,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAQA,QAAQ,UAChB,YAAC,IAAD,CAAOC,OAAO,IAAID,QAAQ,WAE1B,iBAAQ,CACN,GAAM,cADR,cAGA,iBAAQ,CACN,GAAM,2BADR,4BAGA,8FACA,YAAC,IAAD,CAAQA,QAAQ,UAChB,YAAC,IAAD,CAAOE,OAAO,IAAID,OAAO,IAAIE,MAAM,aAAaC,SAAU,kBAAM,MAAMJ,QAAQ,WAE9E,iBAAQ,CACN,GAAM,wCADR,+CAGA,8DACA,iBAAQ,CACN,GAAM,mBADR,mBAGA,kGACA,iBAAQ,CACN,GAAM,uBADR,uBAGA,kEACA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAYK,WAAY,EAAGC,OAAQ,0OAAmPC,QAAS,CAC7RR,QACAH,kBACAY,eACAC,QACAC,UACAC,SACAC,WACAC,WACAC,mBACCd,QAAQ,cACX,YAAC,IAAD,CAAKA,QAAQ,OACT,YAAC,IAAD,CAAQA,QAAQ,UACZ,YAAC,IAAD,CAAOE,OAAO,IAAID,OAAQ,YAAC,IAAD,CAAMc,KAAK,QAAQf,QAAQ,SAAWgB,UAAU,QAAQC,OAAK,EAACC,OAAO,UAAUlB,QAAQ,YAGzH,YAAC,IAAD,CAAKA,QAAQ,OACT,YAAC,IAAD,CAAemB,aAAc,GAAKnB,QAAQ,qB,gMAOlDH,EAAWuB,gBAAiB","file":"component---docz-controls-input-mdx-59b4d078816619faef18.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"D:/Web/react-nails/react-nails-docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { Row, Input, Icon, Filler, Inline, QuantityInput } from \"react-nails\";\nconst state = {\n  numValue: 12\n};\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"input\"\n    }}>{`Input`}</h1>\n    <p>{`Creates an input element`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Inline mdxType=\"Inline\">\n    <Input suffix=\"â‚¬\" mdxType=\"Input\" />\n    </Inline>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <h3 {...{\n      \"id\": \"prefix-suffix---element\"\n    }}>{`prefix, suffix - Element`}</h3>\n    <p>{`Sets a prefix or suffix inside the element before or after the input.`}</p>\n    <Inline mdxType=\"Inline\">\n    <Input prefix=\"P\" suffix=\"S\" value=\"Inputvalue\" onChange={() => null} mdxType=\"Input\" />\n    </Inline>\n    <h3 {...{\n      \"id\": \"textalign---string-left-right-center\"\n    }}>{`textAlign - string `}{`[left, right, center]`}</h3>\n    <p>{`Sets the alignment of the input text.`}</p>\n    <h3 {...{\n      \"id\": \"fluid---boolean\"\n    }}>{`fluid - boolean`}</h3>\n    <p>{`If set the input element tries to fill the width of the parent container.`}</p>\n    <h3 {...{\n      \"id\": \"status---statustype\"\n    }}>{`status - StatusType`}</h3>\n    <p>{`Sets the border color according to state.`}</p>\n    <h2 {...{\n      \"id\": \"playground\"\n    }}>{`Playground`}</h2>\n    <Playground __position={2} __code={'<Row>\\n  <Filler>\\n    <Input\\n      prefix=\\\"$\\\"\\n      suffix={<Icon icon=\\\"times\\\" />}\\n      textAlign=\\\"right\\\"\\n      fluid\\n      status=\\\"success\\\"\\n    />\\n  </Filler>\\n</Row>\\n<Row>\\n  <QuantityInput changeAmount={0.1} />\\n</Row>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Row,\n      Input,\n      Icon,\n      Filler,\n      Inline,\n      QuantityInput\n    }} mdxType=\"Playground\">\n    <Row mdxType=\"Row\">\n        <Filler mdxType=\"Filler\">\n            <Input prefix=\"$\" suffix={<Icon icon=\"times\" mdxType=\"Icon\" />} textAlign=\"right\" fluid status=\"success\" mdxType=\"Input\" />\n        </Filler>\n    </Row>\n    <Row mdxType=\"Row\">\n        <QuantityInput changeAmount={0.1} mdxType=\"QuantityInput\" />\n    </Row>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}