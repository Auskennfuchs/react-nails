{"version":3,"sources":["webpack:///../docz/Spinner/Spinner.mdx"],"names":["SizeType","Types","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","size","Object","entries","map","key","itemSpace","align","__position","__code","__scope","Playground","Row","Spinner","Box","Column","Text","color","isMDXComponent"],"mappings":"2hBASEA,EACEC,IADFD,SAEWE,EAAe,Q,0MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,WADR,WAGA,2CACA,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAKA,QAAQ,OACb,YAAC,IAAD,CAASC,KAAK,QAAQD,QAAQ,aAE9B,iBAAQ,CACN,GAAM,cADR,cAGA,iBAAQ,CACN,GAAM,mBADR,mBAGA,yDACA,YAAC,IAAD,CAAQA,QAAQ,UACfE,OAAOC,QAAQZ,GAAUa,KAAI,gBAAEC,EAAF,KAAOJ,EAAP,YAAiB,YAAC,IAAD,CAAKK,UAAU,SAASD,IAAKA,EAAKE,MAAM,SAASP,QAAQ,OAChG,YAAC,IAAD,CAAMA,QAAQ,QAAQK,GACtB,YAAC,IAAD,CAASJ,KAAMA,EAAMD,QAAQ,iBAGrC,iBAAQ,CACN,GAAM,iBADR,iBAGA,uDACA,iBAAQ,CACN,GAAM,sBADR,sBAGA,2FACA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAYQ,WAAY,EAAGC,OAAQ,4BAA+BC,QAAS,CACzEX,QACAH,kBACAe,eACAC,QACAC,YACAC,QACAC,WACAC,SACAxB,WACCQ,QAAQ,cACX,YAAC,IAAD,CAASiB,MAAM,QAAQjB,QAAQ,c,iMAMnCH,EAAWqB,gBAAiB","file":"component---docz-spinner-spinner-mdx-2f8a5e07ed8ce6e4c0da.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"D:/Web/react-nails/react-nails-docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { Row, Spinner, Box, Column, Text, Types } from \"react-nails\";\nconst {\n  SizeType\n} = Types;\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"spinner\"\n    }}>{`Spinner`}</h1>\n    <p>{`Creates a spinner.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Row mdxType=\"Row\">\n    <Spinner size=\"small\" mdxType=\"Spinner\" />\n    </Row>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <h3 {...{\n      \"id\": \"size---sizetype\"\n    }}>{`size - SizeType`}</h3>\n    <p>{`Defines the size of the Spinner.`}</p>\n    <Column mdxType=\"Column\">\n    {Object.entries(SizeType).map(([key, size]) => <Row itemSpace=\"medium\" key={key} align=\"center\" mdxType=\"Row\">\n            <Text mdxType=\"Text\">{key}</Text>\n            <Spinner size={size} mdxType=\"Spinner\" />\n        </Row>)}\n    </Column>\n    <h3 {...{\n      \"id\": \"color---color\"\n    }}>{`color - color`}</h3>\n    <p>{`Sets the color of the Spinner.`}</p>\n    <h3 {...{\n      \"id\": \"absolute---boolean\"\n    }}>{`absolute - boolean`}</h3>\n    <p>{`If set the Spinner will be displayed as centered absolute element.`}</p>\n    <h2 {...{\n      \"id\": \"playground\"\n    }}>{`Playground`}</h2>\n    <Playground __position={2} __code={'<Spinner color=\\\"brand\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Row,\n      Spinner,\n      Box,\n      Column,\n      Text,\n      Types\n    }} mdxType=\"Playground\">\n    <Spinner color=\"brand\" mdxType=\"Spinner\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}