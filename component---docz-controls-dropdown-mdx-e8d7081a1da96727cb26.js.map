{"version":3,"sources":["webpack:///../docz/Controls/Dropdown.mdx"],"names":["values","value","label","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","id","placeholder","filtered","__position","__code","__scope","Playground","Row","Dropdown","isMDXComponent"],"mappings":"2gBAQA,IAAMA,EAAS,CAAC,CACdC,MAAO,KACPC,MAAO,WACN,CACDD,MAAO,KACPC,MAAO,WACN,CACDD,MAAO,KACPC,MAAO,eACN,CACDD,MAAO,KACPC,MAAO,QAEIC,EAAe,Q,4MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,YADR,YAGA,8GACA,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAKA,QAAQ,OACb,YAAC,IAAD,CAAUC,GAAG,mBAAmBC,YAAY,mBAAmBZ,OAAQA,EAAQU,QAAQ,cAEvF,iBAAQ,CACN,GAAM,cADR,cAGA,iBAAQ,CACN,GAAM,sBADR,sBAGA,uEACA,YAAC,IAAD,CAAKA,QAAQ,OACb,YAAC,IAAD,CAAUC,GAAG,mBAAmBC,YAAY,mBAAmBZ,OAAQA,EAAQa,UAAQ,EAACH,QAAQ,cAEhG,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,iBAAkBC,QAAS,CAC5DP,QACAH,kBACAW,eACAC,QACAC,cACCT,QAAQ,cACX,YAAC,IAAD,CAAKA,QAAQ,OAAb,S,mMAMJH,EAAWa,gBAAiB","file":"component---docz-controls-dropdown-mdx-e8d7081a1da96727cb26.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"D:/Web/react-nails/react-nails-docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { Row, Dropdown } from \"react-nails\";\nconst values = [{\n  value: \"AT\",\n  label: \"Austria\"\n}, {\n  value: \"DE\",\n  label: \"Germany\"\n}, {\n  value: \"CH\",\n  label: \"Switzerland\"\n}, {\n  value: \"US\",\n  label: \"USA\"\n}];\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"dropdown\"\n    }}>{`Dropdown`}</h1>\n    <p>{`A Row creates a full size flex box element. Contained items are aligned horizontally.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Row mdxType=\"Row\">\n    <Dropdown id=\"example_dropdown\" placeholder=\"Please choose...\" values={values} mdxType=\"Dropdown\" />\n    </Row>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <h3 {...{\n      \"id\": \"filtered---boolean\"\n    }}>{`filtered - boolean`}</h3>\n    <p>{`Dropdown value can be filtered via text input.`}</p>\n    <Row mdxType=\"Row\">\n    <Dropdown id=\"example_dropdown\" placeholder=\"Please choose...\" values={values} filtered mdxType=\"Dropdown\" />\n    </Row>\n    <h2 {...{\n      \"id\": \"playground\"\n    }}>{`Playground`}</h2>\n    <Playground __position={2} __code={'<Row>row</Row>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Row,\n      Dropdown\n    }} mdxType=\"Playground\">\n    <Row mdxType=\"Row\">row</Row>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}